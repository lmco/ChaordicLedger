#!/bin/bash

set -o errexit

export CLUSTER_NAME="chaordicledger"
TEMP_DIR=${TEMP_DIR:-/tmp/${CLUSTER_NAME}}

. env.sh

syslog "Sourcing multiple scripts to allow access to the necessary setup functions."
. hyperledger/scripts/utilities.sh
. hyperledger/scripts/check_prerequisites.sh
. hyperledger/scripts/cluster.sh
. hyperledger/scripts/create_msp.sh
. hyperledger/scripts/create_channel.sh
. hyperledger/scripts/create_chaincode.sh
. monitoring/scripts/monitoring.sh
. graph/job/scripts/graphjob.sh
. graph/processor/scripts/graphprocessor.sh
. diagnostics/curl/scripts/curl.sh

syslog "Setting additional environment variables necessary for setup, including considerations for corporate firewalls."

export NO_PROXY=10.244.0.0/16,10.96.0.0/12,$NO_PROXY
export no_proxy=$NO_PROXY

export NGINX_HTTP_PORT=${TEST_NETWORK_INGRESS_HTTP_PORT:-80}
export NGINX_HTTPS_PORT=${TEST_NETWORK_INGRESS_HTTPS_PORT:-443}

export NETWORK_NAME="chaordicledger"
export CLUSTER_NAME="chaordiccluster"
export NS=${NETWORK_NAME}
export CHANNEL_NAME="cl"

#export CHAINCODE_NAME=asset-transfer-basic
#export CHAINCODE_IMAGE=${DOCKER_REGISTRY_PROXY}${GHCR_IO}hyperledgendary/fabric-ccaas-asset-transfer-basic:latest

export PEER_TLS_ENABLED=false
#export CHAINCODE_NAME=artifact-metadata
#export CHAINCODE_IMAGE="${DOCKER_REGISTRY_PROXY}${GHCR_IO}lmco/chaordicledger/metadata-chaincode:v0.0.0"

#echo ${FABRIC_CONTAINER_REGISTRY}
#echo ${CHAINCODE_IMAGE}

export LOCAL_REGISTRY_NAME="kind-registry"
export LOCAL_REGISTRY_PORT="5000"

export RCAADMIN_AUTH=rcaadmin:rcaadminpw

# LOG_FILE=${TEST_NETWORK_LOG_FILE:-network.log}
# DEBUG_FILE=${TEST_NETWORK_DEBUG_FILE:-network-debug.log}

# Used for applying additional CA trusts (e.g. CAs for corporate proxy servers)
ADDITIONAL_CA_TRUST=${ADDITIONAL_CA_CERTS_LOCATION:-catrust}

## Parse mode
if [[ $# -lt 1 ]] ; then
  syslog "Invalid arguments. Exiting."
  exit 0
else
  MODE=$1
  shift
fi

# TODO: Need ability to launch and join an existing network.
# TODO: Look into creating a Windows variant.

if [ "${MODE}" == "init" ]; then
  sourceProxyDetails
  syslog "Initializing cluster \"${CLUSTER_NAME}\""
  pushd hyperledger/scripts
  cluster_init
  popd
  syslog "üèÅ - Cluster \"${CLUSTER_NAME}\" is ready."
elif [ "${MODE}" == "monitor" ]; then
  sourceProxyDetails
  syslog "Enabling monitoring"
  pushd monitoring/scripts
  enable_monitoring
  popd
  syslog "üèÅ - Monitoring is ready."
elif [ "${MODE}" == "ipfs" ]; then
  syslog "Enabling IPFS"
  sourceProxyDetails
  pushd ipfs/scripts
  . create_ipfs.sh
  create_ipfs
  popd
  
  syslog "üèÅ - IPFS for \"${CLUSTER_NAME}\" is ready."
elif [ "${MODE}" == "ipfsReset" ]; then
  syslog "Resetting IPFS"
  sourceProxyDetails
  pushd ipfs/scripts
  . create_ipfs.sh
  delete_ipfs
  create_ipfs
  popd
  
  syslog "üèÅ - IPFS for \"${CLUSTER_NAME}\" is ready."
elif [ "${MODE}" == "msp" ]; then
  syslog "Creating MSPs"
  pushd hyperledger/scripts
  create_msp $@
  popd
  
  syslog "üèÅ - MSPs for \"${CLUSTER_NAME}\" are ready."
elif [ "${MODE}" == "channel" ]; then
  syslog "Initialzing channel \"${CHANNEL_NAME}\""
  pushd hyperledger/scripts
  channel_init $@
  popd

  syslog "üèÅ - Channel \"${CHANNEL_NAME}\" for \"${CLUSTER_NAME}\" is ready."
elif [ "${MODE}" == "peer" ]; then
  syslog "Initializing peers"
  pushd hyperledger/scripts
  channel_join $@
  popd

  syslog "üèÅ - Peers joined \"${CHANNEL_NAME}\"."
elif [ "${MODE}" == "chaincode" ]; then
  syslog "Deploying chaincode"
  sourceProxyDetails
  pushd hyperledger/scripts
  # This images are already in the kind cluster's registry, just need to reference them.
  deploy_chaincode "${DOCKER_REGISTRY_PROXY}${GHCR_IO}lmco/chaordicledger/metadata-chaincode:v0.0.0" ${ARTIFACT_METADATA_CCNAME}
  deploy_chaincode "${DOCKER_REGISTRY_PROXY}${GHCR_IO}lmco/chaordicledger/content-chaincode:v0.0.0" ${ARTIFACT_CONTENT_CCNAME}
  deploy_chaincode "${DOCKER_REGISTRY_PROXY}${GHCR_IO}lmco/chaordicledger/relationship-chaincode:v0.0.0" ${ARTIFACT_RELATIONSHIP_CCNAME}
  #deploy_chaincode "${DOCKER_REGISTRY_PROXY}${GHCR_IO}lmco/chaordicledger/obsidian-lightswitch:v0.0.0" ${LIGHTSWITCH_CCNAME}
  popd

  syslog "üèÅ - Chaincode deployed."
elif [ "${MODE}" == "redeploy" ]; then
  syslog "Redeploying chaincode $@"
  pushd hyperledger/scripts
  export CHAINCODE_ID=basic_1.0:0262396ccaffaa2174bc09f750f742319c4f14d60b16334d2c8921b6842c090c
  launch_chaincode_service $@
  popd
  syslog "üèÅ - Chaincode redeployed."
elif [ "${MODE}" == "invoke" ]; then
  syslog "Invoking chaincode \"$1\""
  pushd hyperledger/scripts
  invoke_chaincode $@
  popd

  syslog "üèÅ - Chaincode \"$1\" invoked."
elif [ "${MODE}" == "query" ]; then
  syslog "Querying chaincode \"$1\""
  pushd hyperledger/scripts
  query_chaincode $@
  popd

  syslog "üèÅ - Chaincode \"$1\" queried."
elif [ "${MODE}" == "graphinit" ]; then
  syslog "Initializing relationship graph."
  sourceProxyDetails
  pushd graph/job/scripts
  init_graph_job
  popd

  syslog "üèÅ - Relationship graph initialized."
# elif [ "${MODE}" == "graphmodify" ]; then
#   sourceProxyDetails
#   pushd graph/scripts
#   modify_graphprocessor_job
#   popd

#   echo "üèÅ - graph reader created."
elif [ "${MODE}" == "graphprocessor" ]; then
  syslog "Initializing relationship graph processor"
  sourceProxyDetails
  pushd graph/processor/scripts
  init_graphprocessor_deployment
  popd

  syslog "üèÅ - Relationship graph processor created."
elif [ "${MODE}" == "curl" ]; then
  syslog "Executing curl"
  sourceProxyDetails
  pushd diagnostics/curl/scripts
  #Example: run_curl http://foo-service:12345
  run_curl $@
  popd

  syslog "üèÅ - curl executed."
elif [ "${MODE}" == "term" ]; then
  syslog "Terminating cluster \"${CLUSTER_NAME}\":"
  
  pushd cleanup/agnostic
  ./cleanup_hyperledger.sh
  popd
  
  syslog "üèÅ - Cluster \"${CLUSTER_NAME}\" is gone."
elif [ "${MODE}" == "purge" ]; then
  if [ -d "$TEMP_DIR" ] && [ "/tmp" != "$TEMP_DIR" ] && [ "/" != "$TEMP_DIR" ]; then
    syslog "Purging contents of $TEMP_DIR to get a clean set of results."
    rm -rf $TEMP_DIR/*
  else
    syslog "NOT purging contents of $TEMP_DIR"
  fi

  syslog "Purging cluster \"${CLUSTER_NAME}\":"
  
  pushd cleanup/agnostic
  ./purge_hyperledger.sh
  popd
  
  syslog "üèÅ - Cluster \"${CLUSTER_NAME}\" and its supporting Docker images are gone."
else
  syslog "Unrecognized mode: \"${MODE}\". Exiting."
  exit 1
fi

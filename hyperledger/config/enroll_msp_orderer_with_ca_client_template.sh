set -x
export FABRIC_CA_CLIENT_HOME=/var/hyperledger/fabric-ca-client
export FABRIC_CA_CLIENT_TLS_CERTFILES=/var/hyperledger/fabric/config/tls/ca.crt

# Each identity in the network needs a registration and enrollment.
fabric-ca-client register --id.name org${ORG_NUMBER}-orderer${ORDERER_NUMBER} --id.secret ordererpw --id.type orderer --url https://org${ORG_NUMBER}-ca --mspdir $FABRIC_CA_CLIENT_HOME/org${ORG_NUMBER}-ca/rcaadmin/msp
fabric-ca-client enroll --url https://org${ORG_NUMBER}-orderer${ORDERER_NUMBER}:ordererpw@org${ORG_NUMBER}-ca --csr.hosts org${ORG_NUMBER}-orderer${ORDERER_NUMBER} --mspdir /var/hyperledger/fabric/organizations/ordererOrganizations/org${ORG_NUMBER}.example.com/orderers/org${ORG_NUMBER}-orderer${ORDERER_NUMBER}.org${ORG_NUMBER}.example.com/msp

# Create an MSP config.yaml (why is this not generated by the enrollment by fabric-ca-client?)
echo "NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/org${ORG_NUMBER}-ca.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/org${ORG_NUMBER}-ca.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/org${ORG_NUMBER}-ca.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/org${ORG_NUMBER}-ca.pem
    OrganizationalUnitIdentifier: orderer" > /var/hyperledger/fabric/organizations/ordererOrganizations/org${ORG_NUMBER}.example.com/orderers/org${ORG_NUMBER}-orderer${ORDERER_NUMBER}.org${ORG_NUMBER}.example.com/msp/config.yaml
